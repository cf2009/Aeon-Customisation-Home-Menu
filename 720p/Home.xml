<window id="0">
	<defaultcontrol always="true">323</defaultcontrol>
	<allowoverlay>yes</allowoverlay>
	<controls>
	<control type="label">
		<description>Force Weather update on load</description>
		<posx>0</posx>
		<posy>-100</posy>
		<label>$INFO[Weather.Conditions]</label>
		<font>-</font>
	</control>
	<control type="image" id="87">
		<texture>-</texture>
		<visible>Container(300).OnNext | Container(300).OnPrevious</visible>
		<animation effect="fade" time="200">Hidden</animation>
	</control>
	<control type="image" id="88">
		<texture>-</texture>
		<visible>Control.IsVisible(300)</visible>
		<animation effect="fade" time="300">Hidden</animation>
	</control>
	<control type="image" id="89">
		<texture>-</texture>
		<visible>Window.Previous(4)</visible>
		<animation effect="fade" time="300">Hidden</animation>
	</control>
	<control type="multiimage">
		<include>BackgroundVarsGlobal</include>
		<imagepath background="true">$INFO[Container(300).ListItem.Icon]</imagepath>
		<visible>![control.HasFocus(8001)+Container(300).HasFocus(6)]</visible>
	</control>
	<control type="multiimage">
		<include>BackgroundVarsGlobal</include>
		<imagepath background="true">$INFO[Container(8001).ListItem.Thumb]</imagepath>
		<visible>control.HasFocus(8001)+Container(300).HasFocus(6)</visible>
	</control>

	<include>Furniture_HomeNowPlaying</include>

<!-- Windowopen -->
	<control type="button" id="323">
		<include>homesubmenu_but</include>
<!--
		<onfocus>setProperty(extra_extras,)</onfocus>
		<onfocus>setProperty(Picture_extras,)</onfocus>
		<onfocus>setProperty(totals_extras,)</onfocus>
		<onfocus>setProperty(recentadded_extras,)</onfocus>
		<onfocus>setProperty(CustomMenu1_extras,)</onfocus>
		<onfocus>setProperty(CustomMenu2_extras,)</onfocus>
		<onfocus>setProperty(random_order,)</onfocus>


		<include condition="!Skin.HasSetting(Recently_added)">Widget_RecentAdded_py</include>
		<include condition="!Skin.HasSetting(Library_info)">Widget_Totals_py</include>
		<include condition="Skin.HasSetting(extra_widget_on)">Widget_Extras_py</include>
		<include condition="Skin.HasSetting(Pictures_widget_on)">Widget_Picture_py</include>
		<include condition="Skin.HasSetting(CustomMenu1_widget_on)">Widget_CustomMenu1_py</include>
		<include condition="Skin.HasSetting(CustomMenu2_widget_on)">Widget_CustomMenu2_py</include>
		<include condition="Skin.HasSetting(Widget_random_order)">Widget_random_order_py</include>

		<onfocus>XBMC.RunScript(special://skin/extras/extras.py,unplayed=True$INFO[Window.Property(random_order)]$INFO[Window.Property(CustomMenu1_extras)]$INFO[Window.Property(CustomMenu2_extras)]$INFO[Window.Property(totals_extras)]$INFO[Window.Property(extra_extras)]$INFO[Window.Property(Picture_extras)]$INFO[Window.Property(totals_extras)]$INFO[Window.Property(recentadded_extras)])</onfocus>
-->
		<onfocus>SetFocus(325)</onfocus>
		<onfocus>SetFocus(300)</onfocus>
		<onfocus>Skin.Reset(submenu)</onfocus>
	</control>
<!-- Windowopen end-->
<!-- WIDGET_EXTRAS -->
	<control type="group">
		<visible>Skin.HasSetting(extra_widget_on)</visible>
		<visible>Container(300).HasFocus(2)+StringCompare(Window.Property(ExtrasWidget.Got),yes)</visible>
		<include>widget_XY</include>
		<include>widget_animation</include>
		<control type="group">
			<visible>IsEmpty(Window.Property(ExtrasWidget.Picture)) | IsEmpty(Window.Property(ExtrasWidget.Content))</visible>
			<include>widget_back1</include>
		</control>
		<control type="group">
			<visible>!IsEmpty(Window.Property(ExtrasWidget.Picture)) + !IsEmpty(Window.Property(ExtrasWidget.Content))</visible>
			<include>widget_back2</include>
		</control>
		<control type="label">
			<include>widget_Title</include>
			<label>$INFO[Window.Property(ExtrasWidget.Title)]</label>
			<animation effect="slide" start="-109,0" end="-110,0" time="1" condition="!IsEmpty(Window.Property(ExtrasWidget.Picture)) + !IsEmpty(Window.Property(ExtrasWidget.Content))">Conditional</animation>
		</control>
	  	<control type="label">
			<include>widget_ContentTitle</include>
			<label>[I]$INFO[Window.Property(ExtrasWidget.ContentTitle)][/I]</label>
			<animation effect="slide" start="-109,0" end="-110,0" time="1" condition="!IsEmpty(Window.Property(ExtrasWidget.Picture)) + !IsEmpty(Window.Property(ExtrasWidget.Content))">Conditional</animation>
		</control>
	  	<control type="label">
			<include condition="IsEmpty(Window.Property(ExtrasWidget.Content))">widget_PubDate_center</include>
			<include>widget_PubDate</include>
			<label>$INFO[Window.Property(ExtrasWidget.PubDate)]</label>
		</control>
		<control type="textbox">
			<include>widget_Content</include>
			<label>$INFO[Window.Property(ExtrasWidget.Content)]</label>
			<animation effect="slide" start="0,19" end="0,20" time="1" condition="!IsEmpty(Window.Property(ExtrasWidget.PubDate))">Conditional</animation>
		</control>
		<control type="image">
			<visible>!IsEmpty(Window.Property(ExtrasWidget.Picture))+IsEmpty(Window.Property(ExtrasWidget.Content))]</visible>
			<include>widget_Picture</include>
			<texture>$INFO[Window.Property(ExtrasWidget.Picture)]</texture>
			<animation effect="zoom" start="100" end="95" time="1" center="auto" condition="!IsEmpty(Window.Property(ExtrasWidget.PubDate))">Conditional</animation>
			<animation effect="slide" start="0,14" end="0,15" time="1" condition="!IsEmpty(Window.Property(ExtrasWidget.PubDate))">Conditional</animation>
		</control>
		<control type="image">
			<visible>!IsEmpty(Window.Property(ExtrasWidget.Picture))+!IsEmpty(Window.Property(ExtrasWidget.Content))</visible>
			<include>widget_Picture_small</include>
			<texture>$INFO[Window.Property(ExtrasWidget.Picture)]</texture>
		</control>
	</control>
<!-- WIDGET_EXTRAS End -->
<!-- WIDGET_PICTURE -->
	<control type="group">
		<visible>Skin.HasSetting(Pictures_widget_on)</visible>
		<visible>Container(300).HasFocus(5)+StringCompare(Window.Property(PictureWidget.Got),yes)</visible>
		<include>widget_XY</include>
		<include>widget_animation</include>
		<control type="group">
			<visible>IsEmpty(Window.Property(PictureWidget.Picture)) | IsEmpty(Window.Property(PictureWidget.Content))</visible>
			<include>widget_back1</include>
		</control>
		<control type="group">
			<visible>!IsEmpty(Window.Property(PictureWidget.Picture)) + !IsEmpty(Window.Property(PictureWidget.Content))</visible>
			<include>widget_back2</include>
		</control>
		<control type="label">
			<include>widget_Title</include>
			<label>$INFO[Window.Property(PictureWidget.Title)]</label>
			<animation effect="slide" start="0,0" end="-110,0" time="1" condition="!IsEmpty(Window.Property(PictureWidget.Picture)) + !IsEmpty(Window.Property(PictureWidget.Content))">Conditional</animation>
		</control>
	  	<control type="label">
			<include>widget_ContentTitle</include>
			<label>[I]$INFO[Window.Property(PictureWidget.ContentTitle)][/I]</label>
			<animation effect="slide" start="0,0" end="-110,0" time="1" condition="!IsEmpty(Window.Property(PictureWidget.Picture)) + !IsEmpty(Window.Property(PictureWidget.Content))">Conditional</animation>
		</control>
	  	<control type="label">
			<include condition="IsEmpty(Window.Property(PictureWidget.Content))">widget_PubDate_center</include>
			<include>widget_PubDate</include>
			<label>$INFO[Window.Property(PictureWidget.PubDate)]</label>
		</control>
		<control type="textbox">
			<include>widget_Content</include>
			<label>$INFO[Window.Property(PictureWidget.Content)]</label>
			<animation effect="slide" start="19,0" end="0,20" time="1" condition="!IsEmpty(Window.Property(PictureWidget.PubDate))">Conditional</animation>
		</control>
		<control type="image">
			<visible>!IsEmpty(Window.Property(PictureWidget.Picture))+IsEmpty(Window.Property(PictureWidget.Content))]</visible>
			<include>widget_Picture</include>
			<texture>$INFO[Window.Property(PictureWidget.Picture)]</texture>
			<animation effect="zoom" start="100" end="95" time="1" center="auto" condition="!IsEmpty(Window.Property(PictureWidget.PubDate))">Conditional</animation>
			<animation effect="slide" start="0,14" end="0,15" time="1" condition="!IsEmpty(Window.Property(PictureWidget.PubDate))">Conditional</animation>
		</control>
		<control type="image">
			<visible>!IsEmpty(Window.Property(PictureWidget.Picture))+!IsEmpty(Window.Property(PictureWidget.Content))</visible>
			<include>widget_Picture_small</include>
			<texture>$INFO[Window.Property(PictureWidget.Picture)]</texture>
		</control>
	</control>
<!-- WIDGET_PICTURE End  -->
<!-- WIDGET_custom_mainmenu 1 -->
	<control type="group">
		<visible>Skin.HasSetting(CustomMenu1_widget_on)</visible>
		<visible>Container(300).HasFocus(30)+StringCompare(Window.Property(CustomMenu1.Got),yes)</visible>
		<include>widget_XY</include>
		<include>widget_animation</include>
		<control type="group">
			<visible>IsEmpty(Window.Property(CustomMenu1.Picture)) | IsEmpty(Window.Property(CustomMenu1.Content))</visible>
			<include>widget_back1</include>
		</control>
		<control type="group">
			<visible>!IsEmpty(Window.Property(CustomMenu1.Picture)) + !IsEmpty(Window.Property(CustomMenu1.Content))</visible>
			<include>widget_back2</include>
		</control>
		<control type="label">
			<include>widget_Title</include>
			<label>$INFO[Window.Property(CustomMenu1.Title)]</label>
			<animation effect="slide" start="0,0" end="-110,0" time="1" condition="!IsEmpty(Window.Property(CustomMenu1.Picture)) + !IsEmpty(Window.Property(CustomMenu1.Content))">Conditional</animation>
		</control>
	  	<control type="label">
			<include>widget_ContentTitle</include>
			<label>[I]$INFO[Window.Property(CustomMenu1.ContentTitle)][/I]</label>
			<animation effect="slide" start="0,0" end="-110,0" time="1" condition="!IsEmpty(Window.Property(CustomMenu1.Picture)) + !IsEmpty(Window.Property(CustomMenu1.Content))">Conditional</animation>
		</control>
	  	<control type="label">
			<include condition="IsEmpty(Window.Property(CustomMenu1.Content))">widget_PubDate_center</include>
			<include>widget_PubDate</include>
			<label>$INFO[Window.Property(CustomMenu1.PubDate)]</label>
		</control>
		<control type="textbox">
			<include>widget_Content</include>
			<label>$INFO[Window.Property(CustomMenu1.Content)]</label>
			<animation effect="slide" start="19,0" end="0,20" time="1" condition="!IsEmpty(Window.Property(CustomMenu1.PubDate))">Conditional</animation>
		</control>
		<control type="image">
			<visible>!IsEmpty(Window.Property(CustomMenu1.Picture))+IsEmpty(Window.Property(CustomMenu1.Content))]</visible>
			<include>widget_Picture</include>
			<texture>$INFO[Window.Property(CustomMenu1.Picture)]</texture>
			<animation effect="zoom" start="100" end="95" time="1" center="auto" condition="!IsEmpty(Window.Property(CustomMenu1.PubDate))">Conditional</animation>
			<animation effect="slide" start="0,14" end="0,15" time="1" condition="!IsEmpty(Window.Property(CustomMenu1.PubDate))">Conditional</animation>
		</control>
		<control type="image">
			<visible>!IsEmpty(Window.Property(CustomMenu1.Picture))+!IsEmpty(Window.Property(CustomMenu1.Content))</visible>
			<include>widget_Picture_small</include>
			<texture>$INFO[Window.Property(CustomMenu1.Picture)]</texture>
		</control>
	</control>
<!-- WIDGET_custom_mainmenu 1 End  -->
<!-- WIDGET_custom_mainmenu 2 -->
	<control type="group">
		<visible>Skin.HasSetting(CustomMenu2_widget_on)</visible>
		<visible>Container(300).HasFocus(31)+StringCompare(Window.Property(CustomMenu2.Got),yes)</visible>
		<include>widget_XY</include>
		<include>widget_animation</include>
		<control type="group">
			<visible>IsEmpty(Window.Property(CustomMenu2.Picture)) | IsEmpty(Window.Property(CustomMenu2.Content))</visible>
			<include>widget_back1</include>
		</control>
		<control type="group">
			<visible>!IsEmpty(Window.Property(CustomMenu2.Picture)) + !IsEmpty(Window.Property(CustomMenu2.Content))</visible>
			<include>widget_back2</include>
		</control>
		<control type="label">
			<include>widget_Title</include>
			<label>$INFO[Window.Property(CustomMenu2.Title)]</label>
			<animation effect="slide" start="0,0" end="-110,0" time="1" condition="!IsEmpty(Window.Property(CustomMenu2.Picture)) + !IsEmpty(Window.Property(CustomMenu2.Content))">Conditional</animation>
		</control>
	  	<control type="label">
			<include>widget_ContentTitle</include>
			<label>[I]$INFO[Window.Property(CustomMenu2.ContentTitle)][/I]</label>
			<animation effect="slide" start="0,0" end="-110,0" time="1" condition="!IsEmpty(Window.Property(CustomMenu2.Picture)) + !IsEmpty(Window.Property(CustomMenu2.Content))">Conditional</animation>
		</control>
	  	<control type="label">
			<include condition="IsEmpty(Window.Property(CustomMenu2.Content))">widget_PubDate_center</include>
			<include>widget_PubDate</include>
			<label>$INFO[Window.Property(CustomMenu2.PubDate)]</label>
		</control>
		<control type="textbox">
			<include>widget_Content</include>
			<label>$INFO[Window.Property(CustomMenu2.Content)]</label>
			<animation effect="slide" start="19,0" end="0,20" time="1" condition="!IsEmpty(Window.Property(CustomMenu2.PubDate))">Conditional</animation>
		</control>
		<control type="image">
			<visible>!IsEmpty(Window.Property(CustomMenu2.Picture))+IsEmpty(Window.Property(CustomMenu2.Content))]</visible>
			<include>widget_Picture</include>
			<texture>$INFO[Window.Property(CustomMenu2.Picture)]</texture>
			<animation effect="zoom" start="100" end="95" time="1" center="auto" condition="!IsEmpty(Window.Property(CustomMenu2.PubDate))">Conditional</animation>
			<animation effect="slide" start="0,14" end="0,15" time="1" condition="!IsEmpty(Window.Property(CustomMenu2.PubDate))">Conditional</animation>
		</control>
		<control type="image">
			<visible>!IsEmpty(Window.Property(CustomMenu2.Picture))+!IsEmpty(Window.Property(CustomMenu2.Content))</visible>
			<include>widget_Picture_small</include>
			<texture>$INFO[Window.Property(CustomMenu2.Picture)]</texture>
		</control>
	</control>
<!-- WIDGET_custom_mainmenu 1 End  -->

	<include condition="!Skin.HasSetting(Library_info)">Widget_Totals</include>
	<include condition="!Skin.HasSetting(Recently_added) | Skin.HasSetting(Widget_random_order)">Widget_RecentAdded</include>

	<include>Objects_WeatherPopup2</include>
	<include>Furniture_Time</include>
	<include>Furniture_HomeRSS</include>
	<control type="group">
		<posx>0</posx>
		<posy>0</posy>
		<width>1280</width>
		<height>720</height>
		<include>Conditions_HiddenByAeonAssistant</include>
		<animation effect="slide" start="0,0" end="0,225" time="400" tween="cubic" easing="inout" condition="Skin.HasSetting(lowermainmenu)">Conditional</animation>
		<include>Animation_OpenCloseZoom</include>
		<include>Animation_CommonFade</include>
		<control type="image">
			<posx>0</posx>
			<posy>302</posy>
			<width>1280</width>
			<height>150</height>
			<texture>home/homemenu_back.png</texture>
			<include>Animation_CommonFade</include>
			<include>homesubmenu_animation2</include>
		</control>
		<control type="group">
			<posx>0</posx>
			<posy>343</posy>
			<width>1280</width>
			<height>61</height>
			<defaultcontrol>300</defaultcontrol>
			<include>homesubmenu</include>
			<include>MainMenu</include>
			<include>homesubmenu_main_fix</include>
		</control>
		<control type="image">
			<posx>0</posx>
			<posy>302</posy>
			<width>1280</width>
			<height>150</height>
			<texture>home/homemenu_gradient.png</texture>
			<include>Animation_CommonFade</include>
			<visible>!Skin.HasSetting(nohomegradient)</visible>
			<colordiffuse>d0FFFFFF</colordiffuse>
		</control>
	</control>
	<include>Background_ContextBlack</include>
	<include>Furniture_Debug</include>
	</controls>
</window>
